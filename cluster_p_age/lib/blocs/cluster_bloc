import 'dart:async';
import 'cluster_repository';
import 'response';
import 'api_response';


class ClusterBloc {
  ClusterRepository _clusterRepository;
  StreamController _clusterListController;
  StreamSink<ApiResponse<List<Cluster>>> get clusterListSink =>
      _clusterListController.sink;
  Stream<ApiResponse<List<Cluster>>> get clusterListStream =>
      _clusterListController.stream;
  ClusterBloc() {
    _clusterListController = StreamController<ApiResponse<List<Cluster>>>();
    fetchClusterList();
  }
  fetchClusterList() async {
    try {
      List<Cluster> clusters = await _clusterRepository.fetchClusterList();
      clusterListSink.add(ApiResponse.completed(clusters));
    } catch (e) {
      clusterListSink.add(ApiResponse.error(e.toString()));
      print(e);
    }
  }
  dispose() {
      _clusterListController?.close();
  }
}